## this is to install some homebrewn extensions, will only run if cedar.arp_utils_repo is defined

- name: generate ssh keypair if not present
  community.crypto.openssh_keypair:
    path: /root/.ssh/id_rsa
  register: ssh_key

- name: the ssh public key -- you need to register this in the git for the cloning to work
  debug:
    msg: "{{ ssh_key.public_key }}"

- name: Check Frontend services status -- we must wait until everything is started
  command: "/usr/local/src/CEDAR/cedar-cli/check_status.sh Frontend"
  register: result
  until: result.stdout == "OK"
  retries: 100
  delay: 30
  changed_when: false

- name: get arp cedar utils from git
  git:
    repo: '{{ cedar.arp_utils_repo }}'
    dest: '{{ cedar_home }}/arp-cedar-utils'
    version: main
    accept_hostkey: yes

- name: Get admin ID
  shell:
    chdir: '{{ cedar_home }}/arp-cedar-utils'
    cmd: bash -i -c "python get_admin_id.py --base-domain {{ cedar.domain }} --api-key {{ cedar.key }}"
  register: admin_id_output
  changed_when: false
  tags: create_builtin_folders

- name: get dataverse folder id
  shell:
    chdir: '{{ cedar_home }}/arp-cedar-utils'
    cmd: bash -i -c "python folder_to_id.py --base-domain {{ cedar.domain }} --api-key {{ cedar.key }} --path 'All/Users/CEDAR Admin/Public/Dataverse'"
  register: dataverse_folder_id_output
  changed_when: false
  failed_when: false
  when: delete_dataverse_folder is defined and delete_dataverse_folder

- name: Delete dataverse folder if asked
  shell:
    chdir: '{{ cedar_home }}/arp-cedar-utils'
    cmd: bash -i -c "python delete_folder.py --base-domain {{ cedar.domain }} --api-key {{ cedar.key }} --folder-id {{ dataverse_folder_id_output.stdout }}"
  failed_when: false
  when: delete_dataverse_folder is defined and delete_dataverse_folder

- name: Create builtin folders
  shell:
    chdir: '{{ cedar_home }}/arp-cedar-utils'
    cmd: bash -i -c "python create_builtin_folders.py --base-domain {{ cedar.domain }} --api-key {{ cedar.key }} --user-id {{ admin_id_output.stdout }}"
  tags: create_builtin_folders

#- name: upload test dump for demoing
#  shell:
#    chdir: '{{ cedar_home }}/arp-cedar-utils'
#    cmd: bash -i -c "python upload_dump.py --base-domain {{ cedar.domain }} --api-key {{ cedar.key }} --user-id {{ cedar.admin_user }} --dump-dir ./test_dump"

